# Enter your network definition here.
# Use Shift+Enter to update the visualization.
name: "Faceboxes_train"
layer {
  name: "data"
  type: "AnnotatedData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
    #scale: 0.0078125
    resize_param {
      prob: 1
      resize_mode: WARP
      height: 1024
      width: 1024
      interp_mode: LINEAR
      interp_mode: AREA
      interp_mode: NEAREST
      interp_mode: CUBIC
      interp_mode: LANCZOS4
    }
    emit_constraint {
      emit_type: CENTER
    }
    distort_param {
      brightness_prob: 0.5
      brightness_delta: 32
      contrast_prob: 0.5
      contrast_lower: 0.5
      contrast_upper: 1.5
      hue_prob: 0.5
      hue_delta: 18
      saturation_prob: 0.5
      saturation_lower: 0.5
      saturation_upper: 1.5
      random_order_prob: 0.0
    }
  }
  data_param {
    source: "examples/widerface/lmdb/widerface_trainval_lmdb"
    #source: "data/VOCdevkit/face/lmdb/face_trainval_lmdb"
    batch_size: 16
    backend: LMDB
  }
  annotated_data_param {
    batch_sampler {
      max_sample: 1
      max_trials: 1
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 1.0
        max_aspect_ratio: 1.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 1.0
        max_aspect_ratio: 1.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 1.0
        max_aspect_ratio: 1.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 1.0
        max_aspect_ratio: 1.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    label_map_file: "data/face/labelmap_voc.prototxt"
  }
}

######################################################################
# Conv1 + CReLU + Pool1
layer {
  name: "conv1/conv"
  type: "Convolution"
  bottom: "data"
  top: "conv1/conv"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    weight_filler {
      type: "xavier"
    }
    pad_h: 3
    pad_w: 3
    kernel_h: 7
    kernel_w: 7
    stride_h: 4
    stride_w: 4
  }
}
layer {
  name: "conv1/bn"
  type: "BatchNorm"
  bottom: "conv1/conv"
  top: "conv1/conv"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param{
    use_global_stats: true
  }
}

layer {
  name: "conv1/neg"
  type: "Power"
  bottom: "conv1/conv"
  top: "conv1/neg"
  power_param {
    power: 1
    scale: -1.0
    shift: 0
  }
}
layer {
  name: "conv1/concat"
  type: "Concat"
  bottom: "conv1/conv"
  bottom: "conv1/neg"
  top: "conv1"
}
layer {
  name: "conv1/scale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1/relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}

# Conv2 + CReLU + Pool2 --------------------------------------
layer {
  name: "conv2/conv"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2/conv"
  param {
    lr_mult: 0.1
    decay_mult: 0.1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    weight_filler {
      type: "xavier"
    }
    pad_h: 3
    pad_w: 3
    kernel_h: 5
    kernel_w: 5
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "conv2/bn"
  type: "BatchNorm"
  bottom: "conv2/conv"
  top: "conv2/conv"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param{
    use_global_stats: true
  }
}

layer {
  name: "conv2/neg"
  type: "Power"
  bottom: "conv2/conv"
  top: "conv2/neg"
  power_param {
    power: 1
    scale: -1.0
    shift: 0
  }
}
layer {
  name: "conv2/concat"
  type: "Concat"
  bottom: "conv2/conv"
  bottom: "conv2/neg"
  top: "conv2"
}
layer {
  name: "conv2/scale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2/relu"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 0
  }
}
######################################################################
# Inception1
# inception1/c1x1
layer {
  name: "inception1/c1x1"
  type: "Convolution"
  bottom: "pool2"
  top: "inception1/c1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1"
  top: "inception1/c1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1/scale"
  type: "Scale"
  bottom: "inception1/c1x1"
  top: "inception1/c1x1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/c1x1"
  top: "inception1/c1x1"
  name: "prelu1_inception1_c1x1"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
# inception1/p3x3_c1x1----------------------------------------
layer {
  name: "inception1/p3x3_c1x1_1"
  type: "Pooling"
  bottom: "pool2"
  top: "inception1/p3x3_c1x1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

layer {
  name: "inception1/p3x3_c1x1_2"
  type: "Convolution"
  bottom: "inception1/p3x3_c1x1_1"
  top: "inception1/p3x3_c1x1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/p3x3_c1x1_2/bn"
  type: "BatchNorm"
  bottom: "inception1/p3x3_c1x1_2"
  top: "inception1/p3x3_c1x1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/p3x3_c1x1_2/scale"
  type: "Scale"
  bottom: "inception1/p3x3_c1x1_2"
  top: "inception1/p3x3_c1x1_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/p3x3_c1x1_2"
  top: "inception1/p3x3_c1x1_2"
  name: "prelu1_inception1_p3x3_c1x1_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception1/c1x1_c3x3--------------------------------------------
layer {
  name: "inception1/c1x1_c3x3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "inception1/c1x1_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1_c3x3_1"
  top: "inception1/c1x1_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1_c3x3_1/scale"
  type: "Scale"
  bottom: "inception1/c1x1_c3x3_1"
  top: "inception1/c1x1_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/c1x1_c3x3_1"
  top: "inception1/c1x1_c3x3_1"
  name: "prelu1_inception1_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

layer {
  name: "inception1/c1x1_c3x3_2"
  type: "Convolution"
  bottom: "inception1/c1x1_c3x3_1"
  top: "inception1/c1x1_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1_c3x3_2"
  top: "inception1/c1x1_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1_c3x3_2/scale"
  type: "Scale"
  bottom: "inception1/c1x1_c3x3_2"
  top: "inception1/c1x1_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/c1x1_c3x3_2"
  top: "inception1/c1x1_c3x3_2"
  name: "prelu2_inception1_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception1/c1x1_c3x3_c3x3--------------------------------
layer {
  name: "inception1/c1x1_c3x3_c3x3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "inception1/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1_c3x3_c3x3_1"
  top: "inception1/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_1/scale"
  type: "Scale"
  bottom: "inception1/c1x1_c3x3_c3x3_1"
  top: "inception1/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/c1x1_c3x3_c3x3_1"
  top: "inception1/c1x1_c3x3_c3x3_1"
  name: "prelu1_inception1_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_2"
  type: "Convolution"
  bottom: "inception1/c1x1_c3x3_c3x3_1"
  top: "inception1/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1_c3x3_c3x3_2"
  top: "inception1/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_2/scale"
  type: "Scale"
  bottom: "inception1/c1x1_c3x3_c3x3_2"
  top: "inception1/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception1/c1x1_c3x3_c3x3_2"
  top: "inception1/c1x1_c3x3_c3x3_2"
  name: "prelu2_inception1_c1x1_c3x3_c3x3_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_3"
  type: "Convolution"
  bottom: "inception1/c1x1_c3x3_c3x3_2"
  top: "inception1/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_3/bn"
  type: "BatchNorm"
  bottom: "inception1/c1x1_c3x3_c3x3_3"
  top: "inception1/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception1/c1x1_c3x3_c3x3_3/scale"
  type: "Scale"
  bottom: "inception1/c1x1_c3x3_c3x3_3"
  top: "inception1/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "inception1/c1x1_c3x3_c3x3_3"
  top: "inception1/c1x1_c3x3_c3x3_3"
  name: "prelu3_inception1_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

layer {
  name: "inception1"
  type: "Concat"
  bottom: "inception1/c1x1"
  bottom: "inception1/p3x3_c1x1_2"
  bottom: "inception1/c1x1_c3x3_2"
  bottom: "inception1/c1x1_c3x3_c3x3_3"
  top: "inception1"
}

# inception2------------------------------------------------------------
# inception2/c1x1
layer {
  name: "inception2/c1x1"
  type: "Convolution"
  bottom: "inception1"
  top: "inception2/c1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1"
  top: "inception2/c1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1/scale"
  type: "Scale"
  bottom: "inception2/c1x1"
  top: "inception2/c1x1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/c1x1"
  top: "inception2/c1x1"
  name: "prelu1_inception2_c1x1"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
# inception2/p3x3_c1x1----------------------------------------
layer {
  name: "inception2/p3x3_c1x1_1"
  type: "Pooling"
  bottom: "inception1"
  top: "inception2/p3x3_c1x1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

layer {
  name: "inception2/p3x3_c1x1_2"
  type: "Convolution"
  bottom: "inception2/p3x3_c1x1_1"
  top: "inception2/p3x3_c1x1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/p3x3_c1x1_2/bn"
  type: "BatchNorm"
  bottom: "inception2/p3x3_c1x1_2"
  top: "inception2/p3x3_c1x1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/p3x3_c1x1_2/scale"
  type: "Scale"
  bottom: "inception2/p3x3_c1x1_2"
  top: "inception2/p3x3_c1x1_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/p3x3_c1x1_2"
  top: "inception2/p3x3_c1x1_2"
  name: "prelu1_inception2_p3x3_c1x1_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception2/c1x1_c3x3--------------------------------------------
layer {
  name: "inception2/c1x1_c3x3_1"
  type: "Convolution"
  bottom: "inception1"
  top: "inception2/c1x1_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1_c3x3_1"
  top: "inception2/c1x1_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1_c3x3_1/scale"
  type: "Scale"
  bottom: "inception2/c1x1_c3x3_1"
  top: "inception2/c1x1_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/c1x1_c3x3_1"
  top: "inception2/c1x1_c3x3_1"
  name: "prelu1_inception2_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

layer {
  name: "inception2/c1x1_c3x3_2"
  type: "Convolution"
  bottom: "inception2/c1x1_c3x3_1"
  top: "inception2/c1x1_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1_c3x3_2"
  top: "inception2/c1x1_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1_c3x3_2/scale"
  type: "Scale"
  bottom: "inception2/c1x1_c3x3_2"
  top: "inception2/c1x1_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/c1x1_c3x3_2"
  top: "inception2/c1x1_c3x3_2"
  name: "prelu2_inception2_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception2/c1x1_c3x3_c3x3--------------------------------
layer {
  name: "inception2/c1x1_c3x3_c3x3_1"
  type: "Convolution"
  bottom: "inception1"
  top: "inception2/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1_c3x3_c3x3_1"
  top: "inception2/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_1/scale"
  type: "Scale"
  bottom: "inception2/c1x1_c3x3_c3x3_1"
  top: "inception2/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/c1x1_c3x3_c3x3_1"
  top: "inception2/c1x1_c3x3_c3x3_1"
  name: "prelu1_inception2_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_2"
  type: "Convolution"
  bottom: "inception2/c1x1_c3x3_c3x3_1"
  top: "inception2/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1_c3x3_c3x3_2"
  top: "inception2/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_2/scale"
  type: "Scale"
  bottom: "inception2/c1x1_c3x3_c3x3_2"
  top: "inception2/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception2/c1x1_c3x3_c3x3_2"
  top: "inception2/c1x1_c3x3_c3x3_2"
  name: "prelu2_inception2_c1x1_c3x3_c3x3_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_3"
  type: "Convolution"
  bottom: "inception2/c1x1_c3x3_c3x3_2"
  top: "inception2/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_3/bn"
  type: "BatchNorm"
  bottom: "inception2/c1x1_c3x3_c3x3_3"
  top: "inception2/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception2/c1x1_c3x3_c3x3_3/scale"
  type: "Scale"
  bottom: "inception2/c1x1_c3x3_c3x3_3"
  top: "inception2/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "inception2/c1x1_c3x3_c3x3_3"
  top: "inception2/c1x1_c3x3_c3x3_3"
  name: "prelu3_inception2_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}


layer {
  name: "inception2"
  type: "Concat"
  bottom: "inception2/c1x1"
  bottom: "inception2/p3x3_c1x1_2"
  bottom: "inception2/c1x1_c3x3_2"
  bottom: "inception2/c1x1_c3x3_c3x3_3"
  top: "inception2"
}

# Inception3---------------------------------------------------
# inception3/c1x1
layer {
  name: "inception3/c1x1"
  type: "Convolution"
  bottom: "inception2"
  top: "inception3/c1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1"
  top: "inception3/c1x1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1/scale"
  type: "Scale"
  bottom: "inception3/c1x1"
  top: "inception3/c1x1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/c1x1"
  top: "inception3/c1x1"
  name: "prelu1_inception3_c1x1"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
# inception3/p3x3_c1x1----------------------------------------
layer {
  name: "inception3/p3x3_c1x1_1"
  type: "Pooling"
  bottom: "inception2"
  top: "inception3/p3x3_c1x1_1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

layer {
  name: "inception3/p3x3_c1x1_2"
  type: "Convolution"
  bottom: "inception3/p3x3_c1x1_1"
  top: "inception3/p3x3_c1x1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/p3x3_c1x1_2/bn"
  type: "BatchNorm"
  bottom: "inception3/p3x3_c1x1_2"
  top: "inception3/p3x3_c1x1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/p3x3_c1x1_2/scale"
  type: "Scale"
  bottom: "inception3/p3x3_c1x1_2"
  top: "inception3/p3x3_c1x1_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/p3x3_c1x1_2"
  top: "inception3/p3x3_c1x1_2"
  name: "prelu1_inception3_p3x3_c1x1_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception3/c1x1_c3x3
layer {
  name: "inception3/c1x1_c3x3_1"
  type: "Convolution"
  bottom: "inception2"
  top: "inception3/c1x1_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1_c3x3_1"
  top: "inception3/c1x1_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1_c3x3_1/scale"
  type: "Scale"
  bottom: "inception3/c1x1_c3x3_1"
  top: "inception3/c1x1_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/c1x1_c3x3_1"
  top: "inception3/c1x1_c3x3_1"
  name: "prelu1_inception3_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

layer {
  name: "inception3/c1x1_c3x3_2"
  type: "Convolution"
  bottom: "inception3/c1x1_c3x3_1"
  top: "inception3/c1x1_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1_c3x3_2"
  top: "inception3/c1x1_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1_c3x3_2/scale"
  type: "Scale"
  bottom: "inception3/c1x1_c3x3_2"
  top: "inception3/c1x1_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/c1x1_c3x3_2"
  top: "inception3/c1x1_c3x3_2"
  name: "prelu2_inception3_c1x1_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}

# inception3/c1x1_c3x3_c3x3--------------------------------
layer {
  name: "inception3/c1x1_c3x3_c3x3_1"
  type: "Convolution"
  bottom: "inception2"
  top: "inception3/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    pad: 0
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_1/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1_c3x3_c3x3_1"
  top: "inception3/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_1/scale"
  type: "Scale"
  bottom: "inception3/c1x1_c3x3_c3x3_1"
  top: "inception3/c1x1_c3x3_c3x3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/c1x1_c3x3_c3x3_1"
  top: "inception3/c1x1_c3x3_c3x3_1"
  name: "prelu1_inception3_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_2"
  type: "Convolution"
  bottom: "inception3/c1x1_c3x3_c3x3_1"
  top: "inception3/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_2/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1_c3x3_c3x3_2"
  top: "inception3/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_2/scale"
  type: "Scale"
  bottom: "inception3/c1x1_c3x3_c3x3_2"
  top: "inception3/c1x1_c3x3_c3x3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  bottom: "inception3/c1x1_c3x3_c3x3_2"
  top: "inception3/c1x1_c3x3_c3x3_2"
  name: "prelu2_inception3_c1x1_c3x3_c3x3_2"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_3"
  type: "Convolution"
  bottom: "inception3/c1x1_c3x3_c3x3_2"
  top: "inception3/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_3/bn"
  type: "BatchNorm"
  bottom: "inception3/c1x1_c3x3_c3x3_3"
  top: "inception3/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception3/c1x1_c3x3_c3x3_3/scale"
  type: "Scale"
  bottom: "inception3/c1x1_c3x3_c3x3_3"
  top: "inception3/c1x1_c3x3_c3x3_3"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "inception3/c1x1_c3x3_c3x3_3"
  top: "inception3/c1x1_c3x3_c3x3_3"
  name: "prelu3_inception3_c1x1_c3x3_c3x3"
  type: "PReLU"
  param {
      lr_mult: 0
  }
  prelu_param: {
     filler { value: 0.1 type: "constant" }
  }
}


layer {
  name: "inception3"
  type: "Concat"
  bottom: "inception3/c1x1"
  bottom: "inception3/p3x3_c1x1_2"
  bottom: "inception3/c1x1_c3x3_2"
  bottom: "inception3/c1x1_c3x3_c3x3_3"
  top: "inception3"
}

# Conv3_1
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "inception3"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv3_1/bn"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_1/scale"
  type: "Scale"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}

# Conv3_2
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv3_2/bn"
  type: "BatchNorm"
  bottom: "conv3_2"
  top: "conv3_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_2/scale"
  type: "Scale"
  bottom: "conv3_2"
  top: "conv3_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}

# Conv4_1
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_1/bn"
  type: "BatchNorm"
  bottom: "conv4_1"
  top: "conv4_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_1/scale"
  type: "Scale"
  bottom: "conv4_1"
  top: "conv4_1"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}

# Conv4_2
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_2/bn"
  type: "BatchNorm"
  bottom: "conv4_2"
  top: "conv4_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_2/scale"
  type: "Scale"
  bottom: "conv4_2"
  top: "conv4_2"
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
######################################################################
# inception3 loc prior conf
layer {
  name: "inception3_mbox_loc"
  type: "Convolution"
  bottom: "inception3"
  top: "inception3_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 12
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "inception3_mbox_loc_perm"
  type: "Permute"
  bottom: "inception3_mbox_loc"
  top: "inception3_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "inception3_mbox_loc_flat"
  type: "Flatten"
  bottom: "inception3_mbox_loc_perm"
  top: "inception3_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "inception3_mbox_conf"
  type: "Convolution"
  bottom: "inception3"
  top: "inception3_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 6
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "inception3_mbox_conf_perm"
  type: "Permute"
  bottom: "inception3_mbox_conf"
  top: "inception3_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "inception3_mbox_conf_flat"
  type: "Flatten"
  bottom: "inception3_mbox_conf_perm"
  top: "inception3_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "inception3_mbox_priorbox"
  type: "PriorBox"
  bottom: "inception3"
  bottom: "data"
  top: "inception3_mbox_priorbox"
  prior_box_param {
    min_size: 32.0
    min_size: 64.0
    min_size: 128.0
    aspect_ratio: 1
    flip: false
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 32
    offset: 0.5
  }
}

# conv3_2 loc prior conf
layer {
  name: "conv3_2_mbox_loc"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 4
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv3_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv3_2_mbox_loc"
  top: "conv3_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv3_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv3_2_mbox_loc_perm"
  top: "conv3_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv3_2_mbox_conf"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv3_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv3_2_mbox_conf"
  top: "conv3_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv3_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv3_2_mbox_conf_perm"
  top: "conv3_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv3_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv3_2"
  bottom: "data"
  top: "conv3_2_mbox_priorbox"
  prior_box_param {
    min_size: 256.0
    aspect_ratio: 1
    flip: false
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 64
    offset: 0.5
  }
}

# conv4_2 loc prior conf
layer {
  name: "conv4_2_mbox_loc"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_2_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 4
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv4_2_mbox_loc_perm"
  type: "Permute"
  bottom: "conv4_2_mbox_loc"
  top: "conv4_2_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv4_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv4_2_mbox_loc_perm"
  top: "conv4_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_2_mbox_conf"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_2_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv4_2_mbox_conf_perm"
  type: "Permute"
  bottom: "conv4_2_mbox_conf"
  top: "conv4_2_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv4_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv4_2_mbox_conf_perm"
  top: "conv4_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv4_2"
  bottom: "data"
  top: "conv4_2_mbox_priorbox"
  prior_box_param {
    min_size: 512.0
    aspect_ratio: 1
    flip: false
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 128
    offset: 0.5
  }
}

# concate layer
layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "inception3_mbox_loc_flat"
  bottom: "conv3_2_mbox_loc_flat"
  bottom: "conv4_2_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "inception3_mbox_conf_flat"
  bottom: "conv3_2_mbox_conf_flat"
  bottom: "conv4_2_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "inception3_mbox_priorbox"
  bottom: "conv3_2_mbox_priorbox"
  bottom: "conv4_2_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}
layer {
  name: "mbox_loss"
  type: "MultiBoxLoss"
  bottom: "mbox_loc"
  bottom: "mbox_conf"
  bottom: "mbox_priorbox"
  bottom: "label"
  top: "mbox_loss"
  include {
    phase: TRAIN
  }
  propagate_down: true
  propagate_down: true
  propagate_down: false
  propagate_down: false
  loss_param {
    normalization: VALID
  }
  multibox_loss_param {
    loc_loss_type: SMOOTH_L1
    conf_loss_type: SOFTMAX
    loc_weight: 1.0
    num_classes: 2
    share_location: true
    match_type: PER_PREDICTION
    overlap_threshold: 0.35
    use_prior_for_matching: true
    background_label_id: 0
    use_difficult_gt: true
    neg_pos_ratio: 3.0
    neg_overlap: 0.5
    code_type: CENTER_SIZE
    ignore_cross_boundary_bbox: false
    mining_type: MAX_NEGATIVE
  }
}
